table FAT_Peso
	lineageTag: 739d3e59-58aa-4fba-9b32-d2f86a173456

	measure 'Data Anterior' = ```
			
			VAR DataAtual = MAX(FAT_Peso[DataHora])
			RETURN
			CALCULATE(
			    MAX(FAT_Peso[DataHora]),
			    FILTER(
			        ALL(FAT_Peso),
			        FAT_Peso[DataHora] < DataAtual
			    )
			)
			
			```
		formatString: General Date
		lineageTag: cc905144-485c-4678-ba1b-f3f8eeb721fd

	measure 'Peso AVG (D-1)' = ```
			
			VAR DataAtual = MAX(FAT_Peso[Data])
			
			VAR DataAnterior = 
			CALCULATE(
			    MAX(FAT_Peso[Data]),
			    FILTER(
			        ALL(FAT_Peso),
			        FAT_Peso[Data] < DataAtual
			    )
			)
			
			RETURN
			CALCULATE(
			    [Peso AVG], 
			    _dCalendario[Data] = DataAnterior
			)+0
			```
		lineageTag: 078c87f1-dbd0-4333-8b5e-a15336c28a2d

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Delta Δ Peso AVG (#)' = [Peso AVG] - FAT_Peso[Peso AVG (D-1)]
		lineageTag: 891070a4-fa94-41b3-906e-05f2e71e1aed

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Delta Δ Peso AVG (%)' =
			
			
			
			DIVIDE(
			    [Peso AVG] - [Peso AVG (D-1)],
			    [Peso AVG (D-1)],
			    0
			)
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 10c6e507-b0ea-4d0a-af37-702770f35a84

	measure 'xMD Peso Inicial' =
			
			
			VAR data_inicial = MIN(FAT_Peso[DataHora])
			
			RETURN
			CALCULATE(
			    AVERAGE(FAT_Peso[Peso]),
			    FAT_Peso[DataHora] = data_inicial
			)
		lineageTag: 34c308e5-c69c-4b3c-bcc2-a504c02813ac

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'xMD Peso Final' =
			
			
			VAR data_final = MAX(FAT_Peso[DataHora])
			
			RETURN
			CALCULATE(
			    AVERAGE(FAT_Peso[Peso]),
			    FAT_Peso[DataHora] = data_final
			)
		lineageTag: acbd4ba3-8240-4636-a037-1fa2ed29adf7

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'xMD Variação Inciial Final' =
			
			
			DIVIDE(
			    [xMD Peso Final] - [xMD Peso Inicial],
			    [xMD Peso Inicial],
			    0
			)
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 79b9db53-358a-45c0-823c-f472b7ce22c7

	column DataHora
		dataType: dateTime
		formatString: Long Date
		lineageTag: 04a6c072-7690-4b2e-8956-50aad7381577
		summarizeBy: none
		sourceColumn: DataHora

		variation Variation
			isDefault
			relationship: 9a983d7a-9ddb-41df-858a-b5cc747693a5
			defaultHierarchy: LocalDateTable_32197afb-0d31-4b29-8264-04f3d74da4c9.'Hierarquia de datas'

		annotation SummarizationSetBy = Automatic

	column Peso
		dataType: double
		lineageTag: 8d209d2d-8987-4228-8918-92b0e10499b6
		summarizeBy: sum
		sourceColumn: Peso

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'Período do Dia' =
			
			SWITCH(
			    TRUE(),
			    FAT_Peso[Hora] <= TIME(12,0,0), "Manhã",
			    FAT_Peso[Hora] <= TIME(18,0,0), "Tarde",
			    "Noite"
			)
		lineageTag: 178da8c1-fb63-4bfb-bc1b-bba22b6724b1
		summarizeBy: none

		annotation SummarizationSetBy = Automatic

	column 'xCL Data Anterior' = ```
			
			
			VAR DataAtual = FAT_Peso[DataHora]
			
			RETURN
			CALCULATE(
			    MAX(FAT_Peso[DataHora]),
			    FILTER(
			        ALL(FAT_Peso),
			        FAT_Peso[DataHora] < DataAtual
			    )
			)
			
			```
		formatString: General Date
		lineageTag: 56c47fef-c21b-4fc2-aa42-631b1430a886
		summarizeBy: none

		variation Variation
			isDefault
			relationship: 9d724f12-00ae-4456-9ee4-7ca6b34b8e94
			defaultHierarchy: LocalDateTable_fca13d4e-0c92-4bcf-a681-39dbe7d12836.'Hierarquia de datas'

		annotation SummarizationSetBy = Automatic

	column 'xCL Peso Anterior' = ```
			
			
			VAR DataAtual = FAT_Peso[DataHora]
			
			VAR DataAnterior = FAT_Peso[xCL Data Anterior]
			
			RETURN
			CALCULATE(
			    [Peso AVG], 
			    FILTER(
			        ALL(FAT_Peso),
			        FAT_Peso[DataHora] = DataAnterior
			    )
			)
			```
		lineageTag: a51ea80e-e0fb-447b-97cd-91505ba674e4
		summarizeBy: sum

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column 'xCL Delta Peso Médio (#)' = ```
			
			IF(
			    ISBLANK(FAT_Peso[xCL Peso Anterior]), 
			    0, 
			    FAT_Peso[Peso] - FAT_Peso[xCL Peso Anterior]
			)
			```
		formatString: 0.00
		lineageTag: 4fe0906c-79e6-4dae-8c1b-99570582aabc
		summarizeBy: sum

		annotation SummarizationSetBy = Automatic

	column 'xCL PESO Delta Médio (%)' =
			
			LOOKUPVALUE(FAT_Peso_Agregado[Delta Médio (%)], FAT_Peso_Agregado[Data], FAT_Peso[DataHora])
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: f1b9b20c-b571-4e61-a957-4b95c5766f9d
		summarizeBy: sum

		annotation SummarizationSetBy = Automatic

	column 'Status do Registro'
		dataType: string
		lineageTag: b9fc12a2-0cb0-4b07-9b86-ee42f6789c87
		summarizeBy: none
		sourceColumn: Status do Registro

		annotation SummarizationSetBy = Automatic

	column Hora
		dataType: dateTime
		formatString: Long Time
		lineageTag: da08f8ca-78df-4af5-a1b0-88a2f64f1a4a
		summarizeBy: none
		sourceColumn: Hora

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Time

	column Data
		dataType: dateTime
		formatString: Long Date
		lineageTag: 2659b77e-ef4f-4b95-b288-c4af6dc64553
		summarizeBy: none
		sourceColumn: Data

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	partition FAT_Peso = m
		mode: import
		queryGroup: FATs
		source =
				let
				    Fonte = Csv.Document(
				        Web.Contents("https://docs.google.com/spreadsheets/d/e/2PACX-1vQsotOBIQLZD1HNZROsSqg0TU_A9XYZu3DUpqvpKIq6R317OOmIeI-drhC1jGJx8ipXxRPFlzzEyqgq/pub?gid=1650192455&single=true&output=csv"),
				        [Delimiter=",", Encoding=65001, QuoteStyle=QuoteStyle.Csv]
				    ),
				    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(Fonte, [PromoteAllScalars=true]),
				    #"Colunas Removidas" = Table.RemoveColumns(#"Cabeçalhos Promovidos",{"Carimbo de data/hora"}),
				    #"Tipo Alterado" = Table.TransformColumnTypes(#"Colunas Removidas",{{"Data", type datetime}, {"Status do Registro", type text}}),
				    #"Tipo Alterado1" = Table.TransformColumnTypes(#"Tipo Alterado",{{"Peso", type number}}, "en-us"),
				    #"Linhas Classificadas" = Table.Sort(#"Tipo Alterado1",{{"Data", Order.Ascending}}),
				    #"Hora Inserida" = Table.AddColumn(#"Linhas Classificadas", "Hora", each DateTime.Time([Data]), type time),
				    #"Colunas Renomeadas" = Table.RenameColumns(#"Hora Inserida",{{"Data", "DataHora"}}),
				    #"Data Inserida" = Table.AddColumn(#"Colunas Renomeadas", "Data", each DateTime.Date([DataHora]), type date)
				in
				    #"Data Inserida"

	annotation PBI_NavigationStepName = Navegação

	annotation PBI_ResultType = Table

